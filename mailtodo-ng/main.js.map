{"version":3,"sources":["./src/app/tasks/tasks-page/tasks-page.component.ts","./src/app/tasks/tasks-page/tasks-page.component.html","./src/app/tasks/task-form/task-form.component.ts","./src/app/tasks/task-form/task-form.component.html","./src/app/tasks/task/task.component.ts","./src/app/tasks/task/task.component.html","./src/app/contants.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/tasks/tasks-page/filter-by-done.pipe.ts","./src/app/core/messages.service.ts","./src/app/core/auth/auth.guard.ts","./src/app/shared/template/header/header.component.ts","./src/app/shared/template/header/header.component.html","./src/app/tasks/task-container/task-container.component.ts","./src/app/tasks/task-container/task-container.component.html","./src/app/shared/shared.module.ts","./src/app/tasks/task/task.service.ts","./src/app/tasks/tasks.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/home/register/register.service.ts","./src/app/core/token/token.service.ts","./src/app/app.module.ts","./src/app/home/register/register.component.ts","./src/app/home/register/register.component.html","./src/app/home/home.module.ts","./src/app/tasks/task/task.ts","./src/app/core/auth/auth-service.service.ts","./src/app/ng-material.module.ts","./src/app/shared/template/footer/footer.component.ts","./src/app/shared/template/footer/footer.component.html","./src/app/core/auth/request.interceptor.ts","./src/app/core/user/user.service.ts","./src/app/app-routing.module.ts","./src/app/home/signin/signin.component.ts","./src/app/home/signin/signin.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { TaskFormComponent } from './../task-form/task-form.component';\r\nimport { TaskService } from './../task/task.service';\r\nimport { Task } from './../task/task';\r\nimport { MessagesService } from '@core/messages.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from '@core/user/user';\r\nimport { UserService } from '@core/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks-page',\r\n  templateUrl: './tasks-page.component.html',\r\n  styleUrls: ['./tasks-page.component.css']\r\n})\r\nexport class TasksPageComponent implements OnInit {\r\n\r\n  abs_fab = false;\r\n  tasks: Task[];\r\n  email: string;\r\n  user: User;\r\n\r\n  constructor(\r\n    private taskService: TaskService,\r\n    public dialog: MatDialog,\r\n    private messagesService: MessagesService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUser().subscribe(usr => this.user = usr);\r\n    this.taskService.read().subscribe(tasks => this.tasks = tasks);\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.abs_fab = true;\r\n\r\n    const dialogRef = this.dialog.open(TaskFormComponent, {\r\n      width: '450px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((resultTask: Task) => {\r\n      setTimeout(() => this.abs_fab = false, 400);\r\n      if (!resultTask) return;\r\n      this.taskService.create(resultTask).subscribe(() => {\r\n        this.messagesService.showMessage('Task created successfully')\r\n        this.ngOnInit();\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  changed(): void {\r\n    this.ngOnInit();\r\n  }\r\n\r\n}\r\n","<div id=\"page-container\">\r\n    <app-header></app-header>\r\n    <div id=\"content-wrap\" class=\"ml-4 mr-4 mt-2\">\r\n\r\n        <div>\r\n            <mat-toolbar class=\"mat-elevation-z1 rounded\" id=\"toolbar\">\r\n                <span id=\"txt-welcome\">Welcome, {{user?.name!! ? user.name : 'Vitor'}}!</span>\r\n                <span class=\"spacer\"></span>\r\n                <button id=\"btn-new\" mat-raised-button (click)=\"openDialog()\">New Task</button>\r\n            </mat-toolbar>\r\n        </div>\r\n\r\n        <app-task-container title=\"To Do\" [tasks]=\"tasks | filterByDone: false\" (warnChange)=\"changed()\">\r\n        </app-task-container>\r\n\r\n        <app-task-container title=\"Done\" [tasks]=\"tasks | filterByDone\" (warnChange)=\"changed()\">\r\n        </app-task-container>\r\n\r\n        <button style=\"position: {{abs_fab ? 'absolute': 'fixed'}}\" id=\"fab-new\" mat-fab (click)=\"openDialog()\">\r\n            <mat-icon>add</mat-icon>\r\n        </button>\r\n\r\n    </div>\r\n    <app-footer id=\"footer\"></app-footer>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Task } from './../task/task';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnInit {\n\n  taskForm: FormGroup;\n\n  constructor(\n    public fBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<TaskFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public task: Task\n  ) { }\n\n  ngOnInit(): void {\n    this.taskForm = this.fBuilder.group({\n      title: [this.task.title, Validators.required],\n      priority: [this.task.priority, Validators.required],\n      description: [this.task.description, Validators.required]\n    })\n  }\n\n  getTask(): Task {\n    this.task.title = this.taskForm.get('title').value;  \n    this.task.priority = this.taskForm.get('priority').value;  \n    this.task.description = this.taskForm.get('description').value;\n    return this.task;  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title *ngIf=\"task.id; else newTask\">Update Task</h1>\n<ng-template #newTask>\n    <h1 mat-dialog-title>New Task</h1>\n</ng-template>\n<div mat-dialog-content>\n    <form [formGroup]=\"taskForm\">\n        <mat-form-field class=\"w-100 mr-2 mb-2\">\n            <mat-label>Title</mat-label>\n            <input matInput formControlName=\"title\" name=\"title\">\n            <mat-error *ngIf=\"taskForm.get('title').errors\">Title is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100 mr-2 mb-2\">\n            <mat-label>Priority</mat-label>\n            <mat-select formControlName=\"priority\">\n                <mat-option value=\"LOW\">Low</mat-option>\n                <mat-option value=\"MEDIUM\">Medium</mat-option>\n                <mat-option value=\"HIGH\">High</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"taskForm.get('priority').errors\">Priority is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100 mb-2\">\n            <mat-label>Description</mat-label>\n            <textarea\n                name=\"description\" matInput\n                formControlName=\"description\"\n                placeholder=\"What need to be done...\"\n            ></textarea>\n            <mat-error *ngIf=\"taskForm.get('description').errors\">Description is required</mat-error>\n        </mat-form-field>\n\n    </form>\n</div>\n<div mat-dialog-actions class=\"mb-1\">\n    <button mat-raised-button (click)=\"onNoClick()\">Cancel</button>\n    <span class=\"spacer\"></span>\n    <div\n        matTooltip=\"All fields are required\"\n        matTooltipPosition=\"before\"\n        [matTooltipDisabled]=\"!taskForm.invalid\"\n    >\n        <button \n        mat-raised-button\n        color=\"golden\"\n        [disabled]=\"taskForm.invalid\"\n        [mat-dialog-close]=\"getTask()\"\n        > {{ task.id ? \"Update\" : \"Create\" }}</button>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\r\nimport { Priorirty, Task } from './task';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\nexport class TaskComponent {\r\n\r\n  @Input() task: Task;\r\n\r\n  getPriority(id: number) {\r\n    return Priorirty[id];\r\n  }\r\n\r\n  getColor(priorirty: Priorirty) {\r\n    const id = Priorirty[priorirty];\r\n    enum Color { green, yellow, red };\r\n    return Color[id];\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-header class=\"mb-1\">\r\n        <div mat-card-avatar class=\"priority\" [style.background-color]=\"getColor(task.priority)\"></div>\r\n        <mat-card-title>{{ task.title }}</mat-card-title>\r\n        <mat-card-subtitle>{{ task.priority }} Priority</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"ml-4 mb-0\">\r\n        <p class=\"font-1\">{{ task.description }}</p>\r\n    </mat-card-content>\r\n    <mat-card-actions fxFlexAlign=\"end\" align=\"end\" class=\"no-outline\">\r\n        <ng-content></ng-content>\r\n    </mat-card-actions>\r\n</mat-card>\r\n","export const API_URL = 'http://192.168.0.17:8080'","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: 'home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnDestroy, AfterViewInit {\r\n\r\n    constructor() { }\r\n\r\n    ngAfterViewInit(): void {\r\n        document.querySelector('body').classList.add('home');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        document.querySelector('body').classList.remove('home');\r\n    }\r\n\r\n}","<div id=\"bg-text\">\r\n    MailToDo++\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"my-link\">\r\n    Developed with ❤️ by <a href=\"https://www.linkedin.com/in/vrfvitor/\" target=\"_blank\">Vitor R.</a>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Task } from '../task/task';\r\n\r\n@Pipe({\r\n  name: 'filterByDone'\r\n})\r\nexport class FilterByDonePipe implements PipeTransform {\r\n\r\n  transform(tasks: Task[], isDone: boolean = true): Task[] {\r\n    if(!tasks) return;\r\n    return tasks.filter(task => task.done === isDone);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessagesService {\r\n\r\n    constructor(private snackBar: MatSnackBar) { }\r\n\r\n    showMessage(msg: string, isError: boolean = false): void {\r\n        this.snackBar.open(msg, 'x', {\r\n            duration: 3000,\r\n            horizontalPosition: 'right',\r\n            verticalPosition: 'top',\r\n            panelClass: isError ? 'msg-error' : 'msg-success'\r\n        });\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '@core/user/user.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> {\r\n        if (this.userService.isLogged()) {\r\n            this.router.navigate(['tasks']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '@core/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n}\r\n","<mat-toolbar style=\"background-color: #231F20;\" class=\"mat-elevation-z3\">\r\n    \r\n    <span id=\"title\">MailToDo ++</span>\r\n    <span id=\"small-title\">MTD ++</span>\r\n    \r\n    <span class=\"spacer\"></span>\r\n\r\n    <button class=\"mr-4 btn-logout\" color=\"golden\" mat-raised-button (click)=\"logout()\">\r\n        <span class=\"mr-1 btn-txt\">Log Out</span>\r\n        <mat-icon>exit_to_app</mat-icon>\r\n    </button>\r\n\r\n</mat-toolbar>","import { TaskService } from './../task/task.service';\r\nimport { Component, Input, Output } from '@angular/core';\r\nimport { Task } from '../task/task';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskFormComponent } from '../task-form/task-form.component';\r\nimport { MessagesService } from '@core/messages.service';\r\n\r\n@Component({\r\n  selector: 'app-task-container',\r\n  templateUrl: './task-container.component.html',\r\n  styleUrls: ['./task-container.component.css']\r\n})\r\nexport class TaskContainerComponent {\r\n\r\n  @Input() title: string;\r\n  @Input() tasks: Task[];\r\n  @Output() warnChange = new EventEmitter();\r\n\r\n  constructor(\r\n    private service: TaskService,\r\n    public dialog: MatDialog,\r\n    private messagesService: MessagesService\r\n  ) { }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).subscribe(() => {\r\n      this.messagesService.showMessage('Task deleted successfully.')\r\n      this.warnChange.emit('');\r\n    });\r\n  }\r\n\r\n  update(id: number) {\r\n    this.service.readById(id).subscribe(task => {\r\n      const dialogRef = this.dialog.open(TaskFormComponent, {\r\n        width: '450px',\r\n        data: {\r\n          id: task.id,\r\n          title: task.title,\r\n          description: task.description,\r\n          priority: task.priority\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((resultTask: Task) => {\r\n        if (!resultTask) return;\r\n        this.service.update(resultTask).subscribe(() => {\r\n          this.messagesService.showMessage('Task updated successfully')\r\n          this.warnChange.emit('');\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  setDone(id: number, done: boolean = true) {\r\n    this.service.setDone(id, done).subscribe(() => {\r\n      this.messagesService.showMessage('Task set as ' + (done ? 'done!' : 'undone!'))\r\n      this.warnChange.emit('');\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"mt-4 mb-4\">\r\n    <h1>{{title}}</h1>\r\n    <mat-divider class=\"mb-3\"></mat-divider>\r\n    \r\n    <div *ngIf=\"!tasks?.length; else showTasks\">\r\n            <h4 class=\"text-center text-muted\">No Tasks In Here</h4>\r\n    </div>\r\n\r\n    <ng-template #showTasks>\r\n        <div *ngFor=\"let task of tasks\" class=\"mb-2\">\r\n            <app-task [task]=\"task\">\r\n                <div *ngIf=\"task.done; else undoneButtons\">\r\n                    <button mat-button class=\"font-1\" (click)=\"delete(task.id)\">Delete</button>\r\n                    <button mat-button class=\"font-1\" (click)=\"setDone(task.id, false)\">Undo!</button>\r\n                </div>\r\n                <ng-template #undoneButtons>\r\n                    <div>\r\n                        <button mat-button class=\"font-1\" [matMenuTriggerFor]=\"menu\">Options</button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item class=\"font-1\" (click)=\"update(task.id)\">Update</button>\r\n                            <button mat-menu-item class=\"font-1\" (click)=\"delete(task.id)\">Delete</button>\r\n                        </mat-menu>\r\n                        <button mat-button class=\"font-1\" (click)=\"setDone(task.id)\">Done!</button>\r\n                    </div>\r\n                </ng-template>\r\n            </app-task>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AngularMaterialModule } from 'app/ng-material.module';\n\nimport { FooterComponent } from './template/footer/footer.component';\nimport { HeaderComponent } from './template/header/header.component';\n\n@NgModule({\n  declarations: [FooterComponent, HeaderComponent],\n  imports: [\n    CommonModule,\n    AngularMaterialModule\n  ],\n  exports: [FooterComponent, HeaderComponent]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Task } from './task';\r\nimport { API_URL } from 'app/contants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  API_URI = `${API_URL}/tasks`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  create(task: Task): Observable<Task> {\r\n    return this.http.post<Task>(this.API_URI, task);\r\n  }\r\n\r\n  read(): Observable<Task[]> {\r\n    return this.http.get<Task[]>(this.API_URI);\r\n  }\r\n\r\n  readById(id: number): Observable<Task> {\r\n    const url = `${this.API_URI}/${id}`;\r\n    return this.http.get<Task>(url);\r\n  }\r\n\r\n  update(product: Task): Observable<Task> {\r\n    const url = `${this.API_URI}/${product.id}`;\r\n    return this.http.put<Task>(url, product);\r\n  }\r\n\r\n  delete(id: number): Observable<Task> {\r\n    const url = `${this.API_URI}/${id}`;\r\n    return this.http.delete<Task>(url);\r\n  }\r\n\r\n  setDone(id: number, done: boolean): Observable<any> {\r\n    const url = `${this.API_URI}/${id}/${done}`;\r\n    return this.http.put(url, null);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { TaskComponent } from './task/task.component';\nimport { FilterByDonePipe } from './tasks-page/filter-by-done.pipe';\nimport { TaskFormComponent } from './task-form/task-form.component';\nimport { TasksPageComponent } from './tasks-page/tasks-page.component';\nimport { AngularMaterialModule } from './../ng-material.module';\nimport { TaskContainerComponent } from './task-container/task-container.component';\n\n@NgModule({\n  declarations: [\n    TaskComponent,\n    TaskContainerComponent,\n    FilterByDonePipe,\n    TasksPageComponent,\n    TaskFormComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    AngularMaterialModule,\n  ],\n  exports: [TasksPageComponent]\n})\nexport class TasksModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent { }\r\n","<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NewUser } from './new-user';\r\n\r\nimport { API_URL } from '../../contants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RegisterService {\r\n\r\n    API_URI=`${API_URL}/register`;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    register(newUser: NewUser) {\r\n        return this.http.post<NewUser>(this.API_URI, newUser);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst KEY = 'authToken';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TokenService {\r\n    \r\n    constructor() { }\r\n\r\n    hasToken() {\r\n        return !!this.getToken();\r\n    }\r\n\r\n    getToken() {\r\n        return window.localStorage.getItem(KEY);\r\n    }\r\n\r\n    setToken(token: string) {\r\n        return window.localStorage.setItem(KEY, token);\r\n    }\r\n\r\n    removeToken() {\r\n        return window.localStorage.removeItem(KEY);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TasksModule } from './tasks/tasks.module';\r\nimport { HomeModule } from './home/home.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RequestInterceptor } from '@core/auth/request.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NoopAnimationsModule,\r\n    TasksModule,\r\n    HomeModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RequestInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NewUser } from './new-user';\r\nimport { RegisterService } from './register.service';\r\n\r\n@Component({\r\n    selector: 'register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    registerForm: FormGroup;\r\n    hide: boolean = true;\r\n\r\n    constructor(\r\n        private fBuilder: FormBuilder,\r\n        private registerService: RegisterService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.registerForm = this.fBuilder.group({\r\n            name: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', [Validators.required, Validators.minLength(5)]]\r\n        })\r\n    }\r\n\r\n    register() {\r\n        const newUser = this.registerForm.getRawValue() as NewUser;\r\n        this.registerService.register(newUser).subscribe(() => {\r\n            this.router.navigate([''], { queryParams: { registered: true } });\r\n        }, e => Error(e));\r\n    }\r\n\r\n}","<div id=\"register-box\" class=\"main-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <mat-card-header>\r\n      <mat-card-title>Register</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form [formGroup]=\"registerForm\" class=\"example-form\" (submit)=\"register()\">\r\n\r\n      <mat-card-content>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input formControlName=\"name\" matInput placeholder=\"First Name\">\r\n          <mat-error *ngIf=\"registerForm.get('name').errors?.required\">\r\n            First name is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width mt-2\">\r\n          <input id=\"email\" autocapitalize=\"none\" #email=\"matInput\" formControlName=\"email\" matInput placeholder=\"Email\">\r\n          <mat-error *ngIf=\"registerForm.get('email').errors?.required\">\r\n            Email is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"registerForm.get('email').errors?.email && !email.focused\">\r\n            Please insert a valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width mt-2\">\r\n          <input [type]=\"!hide ? 'text' : 'password'\" formControlName=\"password\" matInput placeholder=\"Password\">\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">\r\n            {{hide ? 'visibility_off' : 'visibility'}}\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"registerForm.get('password').errors?.required\">\r\n            Password is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"registerForm.get('password').errors?.minlength\">\r\n            Password must contain at least 5 characters\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <button [disabled]=\"!registerForm.valid\" mat-stroked-button color=\"golden\" class=\"btn-block\">Register</button>\r\n\r\n    </form>\r\n    <p style=\"text-align: center;\" class=\"mt-3\">Already a user? <a [routerLink]=\"['']\">Sign In!</a></p>\r\n  </mat-card>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AngularMaterialModule } from '../ng-material.module';\r\n\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        FlexLayoutModule,\r\n        AngularMaterialModule\r\n    ],\r\n    exports: [],\r\n    declarations: [\r\n        SigninComponent,\r\n        RegisterComponent,\r\n        HomeComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class HomeModule { }\r\n","export interface Task {\r\n    id?: number;\r\n    title: string;\r\n    description: string;\r\n    done: boolean;\r\n    priority: Priorirty; \r\n}\r\n\r\nexport enum Priorirty {\r\n    LOW, MEDIUM, HIGH\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserService } from '@core/user/user.service';\r\nimport { API_URL } from 'app/contants';\r\n\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  API_URI = `${API_URL}/auth`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  authenticate(email: string, password: string) {\r\n    return this.http.post(\r\n      this.API_URI,\r\n      { email, password },\r\n      { observe: 'response' }) /* Access to Headers*/\r\n      .pipe(tap(res => {\r\n        const accessToken = res.headers.get('x-access-token');\r\n        this.userService.storeLoggedUserToken(accessToken);\r\n      }));\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\nconst materialModules = [\r\n    CdkTreeModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatBadgeModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatTooltipModule,\r\n    MatDialogModule\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ...materialModules\r\n    ],\r\n    exports: [\r\n        ...materialModules\r\n    ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent { }\r\n","<mat-toolbar class=\"footer mat-elevation-z3\">\r\n\r\n    <div class=\"ml-4 tx-dev\">\r\n        Developed with\r\n        <i class=\"material-icons v-bottom red\">\r\n            favorite\r\n        </i>\r\n        by <strong><a href=\"https://www.linkedin.com/in/vrfvitor/\" target=\"_blank\" class=\"red\">Vitor R.</a></strong>\r\n    </div>\r\n\r\n    <span class=\"spacer\"></span>\r\n\r\n    <div class=\"mr-4 star-it\">\r\n        Give It a Star:\r\n        <a class=\"star\" href=\"https://github.com/vrfvitor/MailToDo-JEE_Angular\" target=\"_blank\">\r\n            <mat-icon style=\"color: #e6c556;\" class=\"v-bottom\">star</mat-icon>\r\n        </a>\r\n    </div>\r\n\r\n</mat-toolbar>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TokenService } from '@core/token/token.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    constructor(private tokenService: TokenService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.tokenService.hasToken) {\r\n            const token = this.tokenService.getToken();\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { TokenService } from '@core/token/token.service';\r\n\r\nimport * as jwt_decode from 'jwt-decode';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from './user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n\r\n    // Using BehaviorSubject so the last data notifiyed is kept until someone gets it\r\n    userSubject = new BehaviorSubject<User>(null);\r\n\r\n    constructor(private tokenService: TokenService) {\r\n        this.tokenService.hasToken &&\r\n            this.decodeAndNotify()\r\n    }\r\n\r\n    /**\r\n     * Whenever user logs in the app, this method will be called\r\n     * then user token is stored and its data is shared to subscribers\r\n     * @param token to be stored\r\n     */\r\n    storeLoggedUserToken(token: string): void {\r\n        this.tokenService.setToken(token);\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    /**\r\n     * Provides a User observer so those who want/beed user info to get\r\n     * it via subscribe\r\n     */\r\n    getUser(): Observable<User> {\r\n        return this.userSubject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Access the authToken and extract it's payload with the User infos\r\n     * and then notify the subscribers\r\n     */\r\n    decodeAndNotify() {\r\n        const token = this.tokenService.getToken();\r\n        try {\r\n            const user = JSON.parse(jwt_decode(token).sub) as User;\r\n            this.userSubject.next(user);\r\n        } catch (e) {\r\n            Error(e);\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.tokenService.removeToken();\r\n        this.userSubject.next(null);\r\n    }\r\n\r\n    isLogged() {\r\n        return this.tokenService.hasToken();\r\n    }\r\n\r\n}   ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@core/auth/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './home/register/register.component';\nimport { SigninComponent } from './home/signin/signin.component';\n\nimport { TasksPageComponent } from './tasks/tasks-page/tasks-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    component: HomeComponent,\n    children: [\n      { path: '', component: SigninComponent },\n      { path: 'register', component: RegisterComponent },\n    ]\n  },\n  { path: 'tasks', component: TasksPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '@core/auth/auth-service.service';\r\nimport { MessagesService } from '@core/messages.service';\r\n\r\n@Component({\r\n    selector: 'signin',\r\n    templateUrl: './signin.component.html',\r\n    styleUrls: ['./signin.component.css']\r\n})\r\n\r\nexport class SigninComponent implements OnInit {\r\n\r\n    loginForm: FormGroup;\r\n    @ViewChild('inputEmail') inputEmail: ElementRef<HTMLInputElement>;\r\n    hide: boolean = true;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private messagesService: MessagesService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRoute.queryParams.subscribe(params =>\r\n            params.registered && this.messagesService.showMessage('User registered successfully')\r\n        );\r\n\r\n        this.loginForm = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login(): void {\r\n        const email = this.loginForm.get('email').value;\r\n        const password = this.loginForm.get('password').value;\r\n\r\n        this.authService.authenticate(email, password)\r\n            .subscribe(\r\n                () => {\r\n                    this.router.navigate(['tasks'], { queryParams: { signedIn: true } });\r\n                }\r\n                , () => {\r\n                    this.messagesService.showMessage('You have entered an invalid username or password')\r\n                    this.loginForm.reset();\r\n                    this.inputEmail.nativeElement.focus();\r\n                });\r\n    }\r\n}","<div class=\"main-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card class=\"box\">\r\n        <mat-card-header>\r\n            <mat-card-title>Sign In</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <form [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"example-form\">\r\n            <mat-card-content>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input #inputEmail autocapitalize=\"none\" #email=\"matInput\" formControlName=\"email\" matInput placeholder=\"Email\">\r\n                      <mat-error *ngIf=\"loginForm.get('email').errors?.required\">\r\n                        Email is <strong>required</strong>\r\n                      </mat-error>\r\n                      <mat-error *ngIf=\"loginForm.get('email').errors?.email && !email.focused\">\r\n                        Please insert a valid email\r\n                      </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"example-full-width mt-2\">\r\n                    <input [type]=\"!hide ? 'text' : 'password'\" formControlName=\"password\" matInput placeholder=\"Password\">\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                        {{hide ? 'visibility_off' : 'visibility'}}\r\n                    </mat-icon>\r\n                    <mat-error *ngIf=\"loginForm.get('password').errors?.required\">\r\n                        Password is <strong>required</strong>\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n            <button [disabled]=\"loginForm.invalid\" mat-stroked-button color=\"golden\" class=\"btn-block\">Sign-in</button>\r\n        </form>\r\n\r\n        <p style=\"text-align: center;\" class=\"mt-3\">Not a user? <a [routerLink]=\"['register']\">Register now</a></p>\r\n    </mat-card>\r\n\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}